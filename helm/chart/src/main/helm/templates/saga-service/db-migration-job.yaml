{{- $labels := include "common.tplvalues.merge" (dict "values" (list .Values.sagaService.labels .Values.commonLabels) "context" $) }}
{{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.sagaService.podLabels .Values.commonLabels) "context" $) }}
apiVersion: {{ include "common.capabilities.job.apiVersion" $ }}
kind: Job
metadata:
  name: {{ printf "%s-db-migration" (include "axon-showcase.saga-service.fullname" $) | trunc 63 | trimSuffix "-" }}
  namespace: {{ include "common.names.namespace" $ }}
  labels: {{- include "common.labels.standard" (dict "customLabels" $labels "context" $) | nindent 4 }}
    app.kubernetes.io/component: saga-service-db-migration
  annotations:
    {{- if or .Values.sagaService.annotations .Values.commonAnnotations }}
    {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.sagaService.annotations .Values.commonAnnotations) "context" $) }}
    {{- include "common.tplvalues.render" (dict "value" $annotations "context" $) | nindent 4 }}
    {{- end }}
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels: {{- include "common.labels.standard" (dict "customLabels" $podLabels "context" $) | nindent 8 }}
        app.kubernetes.io/component: saga-service-db-migration
      {{- if or .Values.sagaService.podAnnotations .Values.commonAnnotations }}
      {{- $podAnnotations := include "common.tplvalues.merge" (dict "values" (list .Values.sagaService.podAnnotations .Values.commonAnnotations) "context" $) }}
      annotations: {{- include "common.tplvalues.render" (dict "value" $podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.sagaService.image) "context" $) | nindent 6 }}
      {{- if .Values.sagaService.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.sagaService.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: main
          image: {{ include "common.images.image" (dict "imageRoot" .Values.sagaService.image "global" .Values.global) }}
          imagePullPolicy: {{ include "axon-showcase.images.imagePullPolicy" (dict "imageRoot" .Values.sagaService.image "context" $) }}
          env:
            - name: "DB_HOSTS"
              value: {{ .Values.dbSagas.hosts | quote }}
            - name: "DB_NAME"
              value: {{ .Values.dbSagas.name | quote }}
            - name: "DB_SCHEMA"
              value: {{ .Values.dbSagas.schema | quote }}
            - name: "DB_PARAMS"
              value: {{ .Values.dbSagas.params | quote }}
            - name: "DB_USER"
              value: {{ .Values.dbSagas.username | quote }}
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbSagas.passwordSecret.name }}
                  key: {{ .Values.dbSagas.passwordSecret.key }}
            - name: "EXIT_AFTER_FLYWAY_MIGRATION"
              value: "true"
            - name: "KAFKA_FETCHER_ENABLED"
              value: "false"
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: { }
