spring:
  application:
    name: axon-showcase-query-service
  main:
    banner-mode: off
  data:
    elasticsearch:
      repositories:
        enabled: false
  jackson:
    default-property-inclusion: non_null
  web:
    locale: en
  webflux:
    problemdetails:
      enabled: true
  reactor:
    context-propagation: auto
  threads:
    virtual:
      enabled: true

axon:
  serializer:
    messages: jackson
  metrics:
    micrometer:
      dimensional: true
  tracing:
    repository:
      aggregate-id-attribute-name: axon.aggregateId

opensearch:
  uris: ${OS_URIS:http://localhost:9200}
  username: ${OS_USER:elastic}
  password: ${OS_PASSWORD:}
  connection-timeout: ${OS_CONNECTION_TIMEOUT:PT1S}
  socket-timeout: ${OS_SOCKET_TIMEOUT:PT2S}
  socket-keep-alive: ${OS_SOCKET_KEEP_ALIVE:true}
  max-connections: ${OS_MAX_CONNECTIONS:100}
  max-connections-per-route: ${OS_MAX_CONNECTIONS_PER_ROUTE:100}
  evict-idle-connections: ${OS_EVICT_IDLE_CONNECTIONS:PT5S}

showcase:
  query:
    index-initialization-enabled: ${INDEX_INITIALIZATION_ENABLED:true}
    exit-after-index-initialization: ${EXIT_AFTER_INDEX_INITIALIZATION:false}

server:
  port: 8083
  error:
    whitelabel:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
        add-additional-paths: true
  metrics:
    distribution:
      percentiles-histogram:
        all: ${METRICS_PERCENTILES_HISTOGRAM_ALL:true}
      percentiles:
        all: ${METRICS_PERCENTILES_ALL:0.95, 0.99, 0.999}
      slo:
        http.server.requests: ${METRICS_SLO_HTTP_SERVER_REQUESTS:300ms, 500ms, 1s, 2s}
      expiry:
        all: ${METRICS_EXPIRY_ALL:PT10M}
    tags:
      application: axon-showcase
  prometheus:
    metrics:
      export:
        enabled: false
  otlp:
    metrics:
      export:
        enabled: false
    tracing:
      export:
        enabled: false
