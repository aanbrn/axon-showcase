spring:
  application:
    name: axon-showcase-saga-service
  main:
    banner-mode: off
  datasource:
    url: jdbc:postgresql://${DB_HOSTS:localhost}/${DB_NAME:showcase-sagas}?currentSchema=${DB_SCHEMA:public}&${DB_PARAMS:}
    username: ${DB_USER:showcase}
    password: ${DB_PASSWORD:}
    hikari:
      maximum-pool-size: ${DB_POOL_MAX_SIZE:100}
      minimum-idle: ${DB_POOL_MIN_IDLE:20}
      max-lifetime: ${DB_POOL_MAX_LIFETIME:1800000}
      connection-timeout: ${DB_POOL_CONNECTION_TIMEOUT:30000}
      validation-timeout: ${DB_POOL_VALIDATION_TIMEOUT:5000}
      idle-timeout: ${DB_POOL_IDLE_TIMEOUT:600000}
      leak-detection-threshold: ${DB_POOL_LEAK_DETECTION_THRESHOLD:0}
  flyway:
    enabled: ${FLYWAY_MIGRATION_ENABLED:true}
    locations: classpath:db/migration/{vendor}
  cache:
    type: jcache
  jackson:
    default-property-inclusion: non_null
  web:
    locale: en
  webflux:
    problemdetails:
      enabled: true
  threads:
    virtual:
      enabled: true

axon:
  serializer:
    messages: jackson
  distributed:
    enabled: on
    jgroups:
      configuration-file: ${JGROUPS_CONFIG_FILE:tcp-nio.xml}
      cluster-name: ${JGROUPS_CLUSTER_NAME:axon-showcase}
      bind-addr: ${JGROUPS_BIND_ADDR:LOOPBACK}
      bind-port: ${JGROUPS_BIND_PORT:7800}
      gossip:
        autoStart: ${JGROUPS_GOSSIP_AUTO_START:false}
        hosts: ${JGROUPS_GOSSIP_HOSTS:localhost[12001]}
      tcp-ping:
        hosts: ${JGROUPS_TCP_PING_HOSTS:localhost[7800]}
      kube-ping:
        namespace: ${JGROUPS_KUBE_PING_NAMESPACE:default}
        labels: ${JGROUPS_KUBE_PING_LABELS:jgroups-cluster=axon-showcase}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    default-topic: ${KAFKA_TOPIC_EVENTS:axon-showcase-events}
    client-id: ${spring.application.name}
    properties:
      security.protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    publisher:
      enabled: false
    consumer:
      properties:
        partition.assignment.strategy: org.apache.kafka.clients.consumer.CooperativeStickyAssignor
    fetcher:
      poll-timeout: ${KAFKA_FETCHER_POLL_TIMEOUT:5000}
      consumer-count: ${KAFKA_FETCHER_CONSUMER_COUNT:1}
  eventhandling:
    processors:
      showcaseManagementSaga:
        source: subscribableKafkaMessageSource
        mode: subscribing
  metrics:
    micrometer:
      dimensional: true
  tracing:
    repository:
      aggregate-id-attribute-name: axon.aggregateId

db-scheduler:
  delay-startup-until-context-ready: true
  polling-interval: PT0.5S
  polling-strategy: lock_and_fetch
  polling-strategy-lower-limit-fraction-of-threads: 1.0
  polling-strategy-upper-limit-fraction-of-threads: 4.0

showcase:
  saga:
    exit-after-flyway-migration: ${EXIT_AFTER_FLYWAY_MIGRATION:false}
    saga-cache:
      maximum-size: ${SAGA_CACHE_MAX_SIZE:1000}
      expires-after-access: ${SAGA_CACHE_EXPIRES_AFTER_ACCESS:PT10M}
      expires-after-write: ${SAGA_CACHE_EXPIRES_AFTER_WRITE:PT5M}
    saga-associations-cache:
      maximum-size: ${SAGA_ASSOCIATIONS_CACHE_MAX_SIZE:1000}
      expires-after-access: ${SAGA_ASSOCIATIONS_CACHE_EXPIRES_AFTER_ACCESS:PT10M}
      expires-after-write: ${SAGA_ASSOCIATIONS_CACHE_EXPIRES_AFTER_WRITE:PT5M}
    tracing:
      logging: ${TRACING_LOGGING:false}

resilience4j:
  enabled: ${RESILIENCE_ENABLED:true}
  circuitbreaker:
    enabled: ${CIRCUITBREAKER_ENABLED:true}
    metrics:
      enabled: ${CIRCUITBREAKER_METRICS_ENABLED:true}
    configs:
      default:
        sliding-window-type: ${CIRCUITBREAKER_DEFAULT_SLIDING_WINDOW_TYPE:COUNT_BASED}
        sliding-window-size: ${CIRCUITBREAKER_DEFAULT_SLIDING_WINDOW_SIZE:100}
        minimum-number-of-calls: ${CIRCUITBREAKER_DEFAULT_MIN_REQUIRED_CALLS:50}
        failure-rate-threshold: ${CIRCUITBREAKER_DEFAULT_FAILURE_RATE_THRESHOLD:50}
        slow-call-rate-threshold: ${CIRCUITBREAKER_DEFAULT_SLOW_CALL_RATE_THRESHOLD:90}
        slow-call-duration-threshold: ${CIRCUITBREAKER_DEFAULT_SLOW_CALL_DURATION_THRESHOLD:PT5S}
        wait-duration-in-open-state: ${CIRCUITBREAKER_DEFAULT_WAIT_DURATION_IN_OPEN_STATE:PT10S}
        enable-exponential-backoff: true
        exponential-backoff-multiplier: ${CIRCUITBREAKER_DEFAULT_BACKOFF_MULTIPLIER_IN_OPEN_STATE:1.5}
        exponential-max-wait-duration-in-open-state: ${CIRCUITBREAKER_DEFAULT_MAX_WAIT_DURATION_IN_OPEN_STATE:}
        permitted-number-of-calls-in-half-open-state: ${CIRCUITBREAKER_DEFAULT_PERMITTED_CALLS_IN_HALF_OPEN_STATE:10}
        max-wait-duration-in-half-open-state: ${CIRCUITBREAKER_DEFAULT_MAX_WAIT_DURATION_IN_HALF_OPEN_STATE:PT0S}
        register-health-indicator: true
    instances:
      showcase-command-service:
        base-config: default
        sliding-window-type: ${CIRCUITBREAKER_COMMAND_SLIDING_WINDOW_TYPE:}
        sliding-window-size: ${CIRCUITBREAKER_COMMAND_SLIDING_WINDOW_SIZE:}
        minimum-number-of-calls: ${CIRCUITBREAKER_COMMAND_MIN_REQUIRED_CALLS:}
        failure-rate-threshold: ${CIRCUITBREAKER_COMMAND_FAILURE_RATE_THRESHOLD:}
        slow-call-rate-threshold: ${CIRCUITBREAKER_COMMAND_SLOW_CALL_RATE_THRESHOLD:}
        slow-call-duration-threshold: ${CIRCUITBREAKER_COMMAND_SLOW_CALL_DURATION_THRESHOLD:}
        wait-duration-in-open-state: ${CIRCUITBREAKER_COMMAND_WAIT_DURATION_IN_OPEN_STATE:}
        exponential-backoff-multiplier: ${CIRCUITBREAKER_COMMAND_BACKOFF_MULTIPLIER_IN_OPEN_STATE:}
        exponential-max-wait-duration-in-open-state: ${CIRCUITBREAKER_COMMAND_MAX_WAIT_DURATION_IN_OPEN_STATE:}
        permitted-number-of-calls-in-half-open-state: ${CIRCUITBREAKER_COMMAND_PERMITTED_CALLS_IN_HALF_OPEN_STATE:}
        max-wait-duration-in-half-open-state: ${CIRCUITBREAKER_COMMAND_MAX_WAIT_DURATION_IN_HALF_OPEN_STATE:}

server:
  port: 8082
  error:
    whitelabel:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: on
        add-additional-paths: on
  metrics:
    tags:
      application: axon-showcase
  prometheus:
    metrics:
      export:
        enabled: false
  otlp:
    metrics:
      export:
        enabled: false
    tracing:
      export:
        enabled: false
